#!/usr/bin/env python3

# Copyright (C) 2024 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
sys.dont_write_bytecode = True

import modinfo

import os

# Get the path of a specific module in the android tree, as cached in module-info.json.
# If any build change is made, and it should be reflected in the output, you should run
# 'refreshmod' first.  Note: This is the inverse of pathmod.

def main(argv):
    if len(argv) != 2:
        sys.stderr.write("usage: usage: dirmods <path>\n")
        sys.exit(1)

    d = argv[1]
    while d.endswith('/'):
        d = d[:-1]
    prefix = d + '/'

    module_info = modinfo.ReadModuleInfo()

    results = set()
    for m in module_info.values():
        for path in m.get(u'path', []):
            if path == d or path.startswith(prefix):
                name = m.get(u'module_name')
                if name:
                    results.add(name)

    for name in sorted(results):
        print(name)

if __name__ == "__main__":
    main(sys.argv)
